{"version":3,"sources":["services.js","Database.js","Document.js","Components.js","Collection.js","App.js","serviceWorker.js","index.js"],"names":["axios","require","DeleteDocument","payload","a","post","DropCollection","CreateCollection","GetDatabaseInfo","get","GetDocuments","JSON","stringify","modalStyle","content","top","left","right","bottom","transform","Modal","setAppElement","Database","props","useState","data","setData","showCreateModal","setShowCreateModal","showDropModal","setShowDropModal","create","setCreate","drop","setDrop","useEffect","getDatabaseInfo","Container","className","onClick","isOpen","style","onRequestClose","onSubmit","evt","preventDefault","createCollection","value","onChange","target","type","dropCollection","map","obj","index","key","collectionID","history","push","count","formatBytes","size","avgObjSize","color","status","bytes","decimals","k","dm","sizes","i","Math","floor","log","parseFloat","pow","toFixed","ObjectToggle","open","setOpen","object","Array","isArray","keys","Object","empty","length","renderPair","active","charAt","isDatetimeObj","getType","moment","format","toString","Document","setActive","onMouseOver","onMouseLeave","deleteDocument","aria-hidden","objectID","_id","refresh","Breadcrumb","trail","title","path","to","Collection","setCollectionID","page","setPage","pageCount","setPageCount","query","setQuery","queryString","setQueryString","sort","setSort","sortString","setSortString","parse","qs","window","location","search","id","getData","tup","split","e","parseInt","renderPageNav","Row","Col","lg","doc","softRefresh","onSetPage","update","results","ceil","App","component","from","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4SAAMA,EAAQC,EAAQ,IAEf,SAAeC,EAAtB,kC,4CAAO,WAA8BC,GAA9B,SAAAC,EAAA,sEACQJ,EAAMK,KAAK,uBAAwBF,GAD3C,oF,sBAIA,SAAeG,EAAtB,kC,4CAAO,WAA8BH,GAA9B,SAAAC,EAAA,sEACQJ,EAAMK,KAAK,uBAAwBF,GAD3C,oF,sBAIA,SAAeI,EAAtB,kC,4CAAO,WAAgCJ,GAAhC,SAAAC,EAAA,sEACQJ,EAAMK,KAAK,yBAA0BF,GAD7C,oF,sBAIA,SAAeK,IAAtB,+B,4CAAO,sBAAAJ,EAAA,sEACQJ,EAAMS,IAAI,0BADlB,oF,sBAIA,SAAeC,EAAtB,kC,4CAAO,WAA4BP,GAA5B,SAAAC,EAAA,sEACQJ,EAAMS,IAAI,sBAAwBE,KAAKC,UAAUT,IADzD,oF,sBCZP,IAAMU,EAAa,CACjBC,QAAS,CACPC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,UAAW,0BAIfC,IAAMC,cAAc,SA4LLC,MA1Lf,SAAkBC,GAAQ,IAAD,EACCC,mBAAS,MADV,mBAChBC,EADgB,KACVC,EADU,OAEuBF,oBAAS,GAFhC,mBAEhBG,EAFgB,KAECC,EAFD,OAGmBJ,oBAAS,GAH5B,mBAGhBK,EAHgB,KAGDC,EAHC,OAIKN,mBAAS,IAJd,mBAIhBO,EAJgB,KAIRC,EAJQ,OAKCR,mBAAS,IALV,mBAKhBS,EALgB,KAKVC,EALU,KAavB,OANAC,qBAAU,WACRC,MACC,IAKD,kBAACC,EAAA,EAAD,KACE,yBAAKC,UAAU,YACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,YACb,wBAAIA,UAAU,QAAd,cACA,uBAAGA,UAAU,cAAcC,QAASH,KAEtC,6BAYJ,8BACE,4BACEE,UAAU,aACVC,QAAS,WACPP,EAAU,IACVJ,GAAmB,KAJvB,kBASA,kBAAC,IAAD,CACEY,OAAQb,EACRc,MAAO5B,EACP6B,eAAgB,kBAAMd,GAAmB,KAEzC,0BACEU,UAAU,aACVK,SAAU,SAACC,GACTA,EAAIC,iBAnDO,mCAoDXC,KAJJ,kBAQE,2BACEC,MAAOhB,EACPiB,SAAU,SAACJ,GAAD,OAASZ,EAAUY,EAAIK,OAAOF,UAE1C,4BAAQT,UAAU,aAAaY,KAAK,UAApC,UAGA,4BACEZ,UAAU,aACVC,QAAS,SAACK,GACRA,EAAIC,iBACJjB,GAAmB,KAJvB,aAiBN,8BACE,4BACEU,UAAU,aACVC,QAAS,WACPL,EAAQ,IACRJ,GAAiB,KAJrB,mBASA,kBAAC,IAAD,CACEU,OAAQX,EACRY,MAAO5B,EACP6B,eAAgB,kBAAMZ,GAAiB,KAEvC,0BACEQ,UAAU,aACVK,SAAU,SAACC,GACTA,EAAIC,iBAlGO,mCAmGXM,KAJJ,mBAQE,2BAAOJ,MAAOd,EAAMe,SAAU,SAACJ,GAAD,OAASV,EAAQU,EAAIK,OAAOF,UAC1D,4BAAQT,UAAU,aAAaY,KAAK,UAApC,UAGA,4BACEZ,UAAU,aACVC,QAAS,SAACK,GACRA,EAAIC,iBACJf,GAAiB,KAJrB,eAgBJL,EAEA,2BAAOa,UAAU,YACf,+BACE,4BACE,0CACA,8CACA,+CACA,8CAGJ,+BACGb,EAAK2B,KAAI,SAACC,EAAKC,GAAN,OACR,wBACEC,IAAKD,EACLhB,UAAU,aACVC,QAAS,kBA0BDiB,EA1BoBH,EAAIG,kBA2B5CjC,EAAMkC,QAAQC,KAAK,kBAAoBF,GADzC,IAAsBA,IAxBR,4BAAKH,EAAIG,cACT,4BAAKH,EAAIM,OACT,4BAAKC,EAAYP,EAAIQ,OACrB,4BAAKD,EAAYP,EAAIS,mBAQ7B,yBAAKxB,UAAU,kBACb,kBAAC,IAAD,CAAQY,KAAK,OAAOa,MAAM,eAzJX,SAgKR3B,IAhKQ,2EAgKvB,sBAAAhC,EAAA,6DACEsB,EAAQ,MADV,KAESA,EAFT,SAEwBlB,IAFxB,0BAE2CiB,KAF3C,8EAhKuB,kEAyKvB,sBAAArB,EAAA,sEACoBG,EAAiB,CAAEiD,aAAczB,IADrD,OAEqB,MAFrB,OAEUiC,SACNpC,GAAmB,GACnBQ,KAJJ,4CAzKuB,kEAiLvB,sBAAAhC,EAAA,sEACoBE,EAAe,CAAEkD,aAAcvB,IADnD,OAEqB,MAFrB,OAEU+B,SACNlC,GAAiB,GACjBM,KAJJ,4CAjLuB,wBA4LzB,SAASwB,EAAYK,GAAsB,IAAfC,EAAc,uDAAH,EACrC,IAAKD,EAAO,MAAO,UAEnB,IAAME,EAAI,KACJC,EAAKF,EAAW,EAAI,EAAIA,EACxBG,EAAQ,CAAC,QAAS,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAE5DC,EAAIC,KAAKC,MAAMD,KAAKE,IAAIR,GAASM,KAAKE,IAAIN,IAEhD,OAAOO,YAAYT,EAAQM,KAAKI,IAAIR,EAAGG,IAAIM,QAAQR,IAAO,IAAMC,EAAMC,G,qCCrKxE,SAASO,EAAatD,GAAQ,IAAD,EACHC,oBAAS,GADN,mBACpBsD,EADoB,KACdC,EADc,KAGrB1B,EAAM9B,EAAMyD,OACZ9B,EAAO+B,MAAMC,QAAQ7B,GAAO,QAAU,SACtC8B,EAAOC,OAAOD,KAAK9B,GACnBgC,EAAwB,IAAhBF,EAAKG,OAEnB,OAAIR,EAEA,8BACE,0BAAMxC,UAAU,SAASC,QAAS,kBAAMwC,GAAQ,KAC7C7B,GAEH,yBAAKZ,UAAU,SACb,yBAAKA,UAAU,UACZ6C,EAAK/B,KAAI,SAACG,EAAKD,GAAN,OACR,0BAAMC,IAAKD,GAAQiC,EAAWhC,EAAKF,EAAIE,GAAMhC,EAAMiE,YAEpDH,GAAS,2CAOhB,0BAAM9C,QAAS,kBAAMwC,GAAQ,IAAOzC,UAAU,UAC3CY,GAaT,SAASqC,EAAWhC,EAAKR,EAAOyC,GAC9B,GAAIzC,IAAUqC,OAAOrC,GAAQ,CAC3B,IAAMG,EAkBV,SAAiBH,GACf,OAAa,MAATA,EAAsB,OA7B5B,SAAuBA,GACrB,QAAKA,IACgB,KAAjBA,EAAMuC,SACe,MAArBvC,EAAM0C,OAAO,KACQ,MAArB1C,EAAM0C,OAAO,MA0BbC,CAAc3C,GAAe,kBACnBA,EArBC4C,CAAQ5C,GAErB,MADa,aAATG,IAAqBH,EAAQ6C,IAAO7C,GAAO8C,OAAO,WAEpD,yBAAKvD,UAAU,WACb,6BACGiB,EADH,KACS,0BAAMjB,UAAWY,GAmBlC,SAAkBH,GAChB,OAAa,MAATA,EAAsB,OACnBA,EAAM+C,WArB0BA,CAAS/C,KAEzCyC,EAAS,yBAAKlD,UAAU,QAAQY,GAAc,IAInD,OACE,6BACGK,EADH,KACS,kBAACsB,EAAD,CAAcG,OAAQjC,EAAOyC,OAAQA,KAgBrCO,MArHf,SAAkBxE,GAAQ,IAAD,EACKC,oBAAS,GADd,mBAChBgE,EADgB,KACRQ,EADQ,KAGjB3C,EAAM9B,EAAME,KACZ0D,EAAOC,OAAOD,KAAK9B,GAEzB,OACE,yBACEf,UAAU,mBACV2D,YAAa,kBAAMD,GAAU,IAC7BE,aAAc,kBAAMF,GAAU,KAE9B,yBAAK1D,UAAU,SACZ6C,EAAK/B,KAAI,SAACG,EAAKD,GAAN,OACR,0BAAMC,IAAKD,GAAQiC,EAAWhC,EAAKF,EAAIE,GAAMiC,QASjD,yBAAKlD,UAAW,YAAckD,EAAS,GAAK,gBAC1C,uBACEjD,QAAS,kBAzBM,0CAyBA4D,IACf7D,UAAU,cACV8D,cAAY,WA3BG,4CAmCvB,sBAAAhG,EAAA,sEAEUF,EAAe,CACnBsD,aAAcjC,EAAMiC,aACpB6C,SAAU9E,EAAME,KAAK6E,MAJ3B,OAOiB,MAPjB,OAMItC,QACkBzC,EAAMgF,UAP5B,4CAnCuB,wB,iBCOlB,SAASC,EAAWjF,GAAQ,IACzBkF,EAAUlF,EAAVkF,MACR,OACE,yBAAKnE,UAAU,UACZmE,EAAMrD,KAAI,WAAgBkB,GAAhB,uBAAEoC,EAAF,KAASC,EAAT,YACT,0BAAMpD,IAAKmD,GACRC,EACC,oCACE,kBAAC,IAAD,CAAMC,GAAID,GAAOD,GACjB,uBAAGpE,UAAU,0BAGf,0BAAMA,UAAU,UAAUoE,QC2KvBG,MA1Lf,SAAoBtF,GAAQ,IAAD,EACeC,mBAAS,MADxB,mBAClBgC,EADkB,KACJsD,EADI,OAEDtF,mBAAS,GAFR,mBAElBuF,EAFkB,KAEZC,EAFY,OAGSxF,mBAAS,MAHlB,mBAGlByF,EAHkB,KAGPC,EAHO,OAID1F,mBAAS,MAJR,mBAIlBC,EAJkB,KAIZC,EAJY,OAKCF,mBAAS,IALV,mBAKlB2F,EALkB,KAKXC,EALW,OAMa5F,mBAAS,MANtB,mBAMlB6F,EANkB,KAMLC,EANK,OAOD9F,mBAAS,IAPR,mBAOlB+F,EAPkB,KAOZC,EAPY,OAQWhG,mBAAS,MARpB,mBAQlBiG,EARkB,KAQNC,EARM,KAgDzB,OAtCAvF,qBAAU,WACR,IAAMwF,EAAQC,IAAGD,MAAME,OAAOC,SAASC,QACvCjB,EAAgBa,EAAMK,MACrB,IAEH7F,qBAAU,WACJqB,GACFyE,EAAQ,CACNzE,eACAuD,OACAI,MAAOxG,KAAKgH,MAAMN,GAClBE,KAAM5G,KAAKgH,MAAMF,OAEpB,CAACjE,EAAcuD,EAAMM,EAAaI,IAErCtF,qBAAU,WACR,IAAMkB,EAAM,GACN6E,EAAMf,EAAMgB,MAAM,KACxB,IACMD,EAAI,KAAI7E,EAAI6E,EAAI,IAAMvH,KAAKgH,MAAMO,EAAI,KACzCZ,EAAe3G,KAAKC,UAAUyC,IAC9B,MAAO+E,GACPd,EAAe,SAEhB,CAACH,IAEJhF,qBAAU,WACR,IAAMkB,EAAM,GACN6E,EAAMX,EAAKY,MAAM,KACjBpF,EAAQmF,EAAI,GACJ,MAAVnF,GAA2B,OAAVA,GACnBM,EAAI6E,EAAI,IAAMG,SAAStF,GACvB2E,EAAc/G,KAAKC,UAAUyC,KACxBqE,EAAc,QACpB,CAACH,IAKF,kBAAClF,EAAA,EAAD,KACE,kBAACmE,EAAD,CAAYC,MAAO,CAAC,CAAC,aAAc,kBAAmB,CAACjD,MACvD,yBAAKlB,UAAU,YACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,YACb,wBAAIA,UAAU,QAAQkB,GACtB,uBAAGlB,UAAU,cAAcC,QAvDZ,8CAyDhB+F,KAiCL,kBAACC,EAAA,EAAD,CAAKjG,UAAU,SACb,kBAACkG,EAAA,EAAD,CAAKC,GAAI,GACP,yBAAKnG,UAAU,mBACb,uCACA,2BACEA,UAAU,YACVS,MAAOoE,EACPnE,SAAU,SAACJ,GAAD,OAASwE,EAASxE,EAAIK,OAAOF,YAI7C,kBAACyF,EAAA,EAAD,CAAKC,GAAI,GACP,yBAAKnG,UAAU,mBACb,sCACA,2BACEA,UAAU,YACVS,MAAOwE,EACPvE,SAAU,SAACJ,GAAD,OAAS4E,EAAQ5E,EAAIK,OAAOF,aAxC5CtB,EAEA,oCACGA,EAAK2B,KAAI,SAACsF,EAAKpF,GAAN,OACR,kBAAC,EAAD,CACEC,IAAKD,EACLE,aAAcA,EACd/B,KAAMiH,EACNnC,QAASoC,QAOf,yBAAKrG,UAAU,kBACb,kBAAC,IAAD,CAAQY,KAAK,OAAOa,MAAM,aAtB3BtC,GAAQ,yBAAKa,UAAU,cAAcgG,OAsD5C,SAASA,IACP,GAAIrB,EAAY,EACd,OACE,6BACGF,EAAO,GACN,oCACE,uBACExE,QAAS,kBAAMqG,EAAU,IACzBtG,UAAU,sCAEZ,uBACEC,QAAS,kBAAMqG,EAAU7B,EAAO,IAChCzE,UAAU,iCATlB,QAaQyE,EAAO,OAASE,EACrBF,EAAOE,GACN,oCACE,uBACE1E,QAAS,kBAAMqG,EAAU7B,EAAO,IAChCzE,UAAU,iCAEZ,uBACEC,QAAS,kBAAMqG,EAAU3B,IACzB3E,UAAU,yCAWxB,SAASsG,EAAUC,GACjBnH,EAAQ,MACRsF,EAAQ6B,GAzJe,4CA4JzB,sBAAAzI,EAAA,sDACe,IAAT2G,GAAwB,KAAVI,GAAyB,KAATI,EAChCU,EAAQ,CAAEzE,eAAcuD,KAAM,KAE9BC,EAAQ,GACRI,EAAS,IACTI,EAAQ,KANZ,4CA5JyB,+BAsKVmB,IAtKU,2EAsKzB,sBAAAvI,EAAA,sDACE6H,EAAQ,CACNzE,eACAuD,OACAI,MAAOxG,KAAKgH,MAAMN,GAClBE,KAAM5G,KAAKgH,MAAMF,KALrB,4CAtKyB,+BA+KVQ,EA/KU,8EA+KzB,WAAuB9H,GAAvB,uBAAAC,EAAA,6DACEsB,EAAQ,MACAqF,EAAS5G,EAAT4G,KAFV,SAGyBrG,EAAaP,GAHtC,gBAGUsB,EAHV,EAGUA,KACAqH,EAAmBrH,EAAnBqH,QAASnF,EAAUlC,EAAVkC,MACjBjC,EAAQoH,GACR5B,EAAa3C,KAAKwE,KAAKpF,EAAQ,MAC1BmF,EAAQ,IAAM/B,EAAO,GAAGC,EAAQD,EAAO,GAP9C,6CA/KyB,wBCYZiC,MAff,WAIE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOrC,KAAK,YAAYsC,UAAY3H,IACpC,kBAAC,IAAD,CAAOqF,KAAK,cAAcsC,UAAYpC,IACtC,kBAAC,IAAD,CAAUqC,KAAK,IAAItC,GAAG,iBCFVuC,QACW,cAA7BtB,OAAOC,SAASsB,UAEe,UAA7BvB,OAAOC,SAASsB,UAEhBvB,OAAOC,SAASsB,SAASC,MACvB,2DCXNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.da5825cf.chunk.js","sourcesContent":["const axios = require('axios')\n\nexport async function DeleteDocument(payload) {\n  return await axios.post('/api/delete-document', payload)\n}\n\nexport async function DropCollection(payload) {\n  return await axios.post('/api/drop-collection', payload)\n}\n\nexport async function CreateCollection(payload) {\n  return await axios.post('/api/create-collection', payload)\n}\n\nexport async function GetDatabaseInfo() {\n  return await axios.get('/api/get-database-info')\n}\n\nexport async function GetDocuments(payload) {\n  return await axios.get('/api/get-documents/' + JSON.stringify(payload))\n}\n\nexport async function GetDocumentCount(payload) {\n  return await axios.get('/api/get-document-count/' + JSON.stringify(payload))\n}\n\nexport async function GetDatabaseID() {\n  return await axios.get('/api/get-database-id')\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport Modal from \"react-modal\";\nimport Loader from \"react-loading\";\nimport { GetDatabaseInfo, CreateCollection, DropCollection } from \"./services\";\n\nconst modalStyle = {\n  content: {\n    top: \"33%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    transform: \"translate(-50%, -50%)\",\n  },\n};\n\nModal.setAppElement(\"#root\");\n\nfunction Database(props) {\n  const [data, setData] = useState(null);\n  const [showCreateModal, setShowCreateModal] = useState(false);\n  const [showDropModal, setShowDropModal] = useState(false);\n  const [create, setCreate] = useState(\"\");\n  const [drop, setDrop] = useState(\"\");\n\n  useEffect(() => {\n    getDatabaseInfo();\n  }, []);\n\n  // JSX\n\n  return (\n    <Container>\n      <div className=\"card-max\">\n        <div className=\"db-header\">\n          <div className=\"db-title\">\n            <h3 className=\"mb-0\">ExpressoDB</h3>\n            <i className=\"fas fa-sync\" onClick={getDatabaseInfo} />\n          </div>\n          <div>\n            {renderCreateCollection()}\n            {renderDropCollection()}\n          </div>\n        </div>\n        {renderData()}\n      </div>\n    </Container>\n  );\n\n  function renderCreateCollection() {\n    return (\n      <span>\n        <button\n          className=\"app-button\"\n          onClick={() => {\n            setCreate(\"\");\n            setShowCreateModal(true);\n          }}\n        >\n          New Collection\n        </button>\n        <Modal\n          isOpen={showCreateModal}\n          style={modalStyle}\n          onRequestClose={() => setShowCreateModal(false)}\n        >\n          <form\n            className=\"modal-form\"\n            onSubmit={(evt) => {\n              evt.preventDefault();\n              createCollection();\n            }}\n          >\n            New Collection:\n            <input\n              value={create}\n              onChange={(evt) => setCreate(evt.target.value)}\n            />\n            <button className=\"app-button\" type=\"submit\">\n              Submit\n            </button>\n            <button\n              className=\"app-button\"\n              onClick={(evt) => {\n                evt.preventDefault();\n                setShowCreateModal(false);\n              }}\n            >\n              Cancel\n            </button>\n          </form>\n        </Modal>\n      </span>\n    );\n  }\n\n  function renderDropCollection() {\n    return (\n      <span>\n        <button\n          className=\"app-button\"\n          onClick={() => {\n            setDrop(\"\");\n            setShowDropModal(true);\n          }}\n        >\n          Drop Collection\n        </button>\n        <Modal\n          isOpen={showDropModal}\n          style={modalStyle}\n          onRequestClose={() => setShowDropModal(false)}\n        >\n          <form\n            className=\"modal-form\"\n            onSubmit={(evt) => {\n              evt.preventDefault();\n              dropCollection();\n            }}\n          >\n            Drop Collection:\n            <input value={drop} onChange={(evt) => setDrop(evt.target.value)} />\n            <button className=\"app-button\" type=\"submit\">\n              Submit\n            </button>\n            <button\n              className=\"app-button\"\n              onClick={(evt) => {\n                evt.preventDefault();\n                setShowDropModal(false);\n              }}\n            >\n              Cancel\n            </button>\n          </form>\n        </Modal>\n      </span>\n    );\n  }\n\n  function renderData() {\n    if (data) {\n      return (\n        <table className=\"db-table\">\n          <thead>\n            <tr>\n              <th>Collection</th>\n              <th>Document Count</th>\n              <th>Collection Size</th>\n              <th>Average Size</th>\n            </tr>\n          </thead>\n          <tbody>\n            {data.map((obj, index) => (\n              <tr\n                key={index}\n                className=\"collection\"\n                onClick={() => toCollection(obj.collectionID)}\n              >\n                <td>{obj.collectionID}</td>\n                <td>{obj.count}</td>\n                <td>{formatBytes(obj.size)}</td>\n                <td>{formatBytes(obj.avgObjSize)}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      );\n    } else\n      return (\n        <div className=\"loader-wrapper\">\n          <Loader type=\"spin\" color=\"#00aaff\" />\n        </div>\n      );\n  }\n\n  // Helpers\n\n  async function getDatabaseInfo() {\n    setData(null);\n    return setData((await GetDatabaseInfo()).data);\n  }\n\n  function toCollection(collectionID) {\n    props.history.push(\"/collection?id=\" + collectionID);\n  }\n\n  async function createCollection() {\n    const res = await CreateCollection({ collectionID: create });\n    if (res.status === 200) {\n      setShowCreateModal(false);\n      getDatabaseInfo();\n    }\n  }\n\n  async function dropCollection() {\n    const res = await DropCollection({ collectionID: drop });\n    if (res.status === 200) {\n      setShowDropModal(false);\n      getDatabaseInfo();\n    }\n  }\n}\n\nexport default Database;\n\nfunction formatBytes(bytes, decimals = 2) {\n  if (!bytes) return \"0 Bytes\";\n\n  const k = 1024;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + \" \" + sizes[i];\n}\n","import React, { useState } from \"react\";\nimport { DeleteDocument } from \"./services\";\nimport moment from \"moment-timezone\";\n\nfunction Document(props) {\n  const [active, setActive] = useState(false);\n\n  const obj = props.data;\n  const keys = Object.keys(obj);\n\n  return (\n    <div\n      className=\"document hspread\"\n      onMouseOver={() => setActive(true)}\n      onMouseLeave={() => setActive(false)}\n    >\n      <div className=\"fluid\">\n        {keys.map((key, index) => (\n          <span key={index}>{renderPair(key, obj[key], active)}</span>\n        ))}\n      </div>\n      {renderToolbar()}\n    </div>\n  );\n\n  function renderToolbar() {\n    return (\n      <div className={\"toolbar \" + (active ? \"\" : \"transparent\")}>\n        <i\n          onClick={() => deleteDocument()}\n          className=\"fa fa-times\"\n          aria-hidden=\"true\"\n        ></i>\n      </div>\n    );\n  }\n\n  // Helpers\n\n  async function deleteDocument() {\n    const status = (\n      await DeleteDocument({\n        collectionID: props.collectionID,\n        objectID: props.data._id,\n      })\n    ).status;\n    if (status === 200) props.refresh();\n  }\n}\n\nfunction ObjectToggle(props) {\n  const [open, setOpen] = useState(false);\n\n  const obj = props.object;\n  const type = Array.isArray(obj) ? \"Array\" : \"Object\";\n  const keys = Object.keys(obj);\n  const empty = keys.length === 0;\n\n  if (open) {\n    return (\n      <span>\n        <span className=\"toggle\" onClick={() => setOpen(false)}>\n          {type}\n        </span>\n        <div className=\"fluid\">\n          <div className=\"indent\">\n            {keys.map((key, index) => (\n              <span key={index}>{renderPair(key, obj[key], props.active)}</span>\n            ))}\n            {empty && <div>(empty)</div>}\n          </div>\n        </div>\n      </span>\n    );\n  } else\n    return (\n      <span onClick={() => setOpen(true)} className=\"toggle\">\n        {type}\n      </span>\n    );\n}\n\nfunction isDatetimeObj(value) {\n  if (!value) return false;\n  if (value.length !== 24) return false;\n  if (value.charAt(10) !== \"T\") return false;\n  if (value.charAt(23) !== \"Z\") return false;\n  return true;\n}\n\nfunction renderPair(key, value, active) {\n  if (value !== Object(value)) {\n    const type = getType(value);\n    if (type === \"datetime\") value = moment(value).format(\"LL LTS\");\n    return (\n      <div className=\"hspread\">\n        <div>\n          {key}: <span className={type}>{toString(value)}</span>\n        </div>\n        {active ? <div className=\"type\">{type}</div> : \"\"}\n      </div>\n    );\n  } else\n    return (\n      <div>\n        {key}: <ObjectToggle object={value} active={active} />\n      </div>\n    );\n}\n\nfunction getType(value) {\n  if (value == null) return \"null\";\n  if (isDatetimeObj(value)) return \"datetime\";\n  return typeof value;\n}\n\nfunction toString(value) {\n  if (value == null) return \"null\";\n  return value.toString();\n}\n\nexport default Document;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ReactLoading from \"react-loading\";\n\nexport function Loader(props) {\n  const { display } = props;\n  if (display)\n    return <ReactLoading className=\"loader\" type=\"cylon\" color=\"#00aaff\" />;\n  else return null;\n}\n\nexport function Breadcrumb(props) {\n  const { trail } = props;\n  return (\n    <div className=\"crumbs\">\n      {trail.map(([title, path], i) => (\n        <span key={title}>\n          {path ? (\n            <>\n              <Link to={path}>{title}</Link>\n              <i className=\"fas fa-chevron-right\" />\n            </>\n          ) : (\n            <span className=\"active\">{title}</span>\n          )}\n        </span>\n      ))}\n    </div>\n  );\n}\n\nexport function BackNav(props) {\n  return (\n    <div className=\"back-nav\">\n      <i className=\"fas fa-chevron-left\" />\n      <Link to={props.to}>Back to {props.display}</Link>\n    </div>\n  );\n}\n\nexport function EditLink(props) {\n  return (\n    <Link to={props.to}>\n      <i className=\"far fa-edit\" />\n    </Link>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport Document from \"./Document\";\nimport qs from \"query-string\";\nimport Loader from \"react-loading\";\nimport { Breadcrumb } from \"./Components\";\nimport { GetDocuments } from \"./services\";\n\nfunction Collection(props) {\n  const [collectionID, setCollectionID] = useState(null);\n  const [page, setPage] = useState(1);\n  const [pageCount, setPageCount] = useState(null);\n  const [data, setData] = useState(null);\n  const [query, setQuery] = useState(\"\");\n  const [queryString, setQueryString] = useState(\"{}\");\n  const [sort, setSort] = useState(\"\");\n  const [sortString, setSortString] = useState(\"{}\");\n\n  useEffect(() => {\n    const parse = qs.parse(window.location.search);\n    setCollectionID(parse.id);\n  }, []);\n\n  useEffect(() => {\n    if (collectionID)\n      getData({\n        collectionID,\n        page,\n        query: JSON.parse(queryString),\n        sort: JSON.parse(sortString),\n      });\n  }, [collectionID, page, queryString, sortString]);\n\n  useEffect(() => {\n    const obj = {};\n    const tup = query.split(\"=\");\n    try {\n      if (tup[1]) obj[tup[0]] = JSON.parse(tup[1]);\n      setQueryString(JSON.stringify(obj));\n    } catch (e) {\n      setQueryString(\"{}\");\n    }\n  }, [query]);\n\n  useEffect(() => {\n    const obj = {};\n    const tup = sort.split(\"=\");\n    const value = tup[1];\n    if (value === \"1\" || value === \"-1\") {\n      obj[tup[0]] = parseInt(value);\n      setSortString(JSON.stringify(obj));\n    } else setSortString(\"{}\");\n  }, [sort]);\n\n  // JSX\n\n  return (\n    <Container>\n      <Breadcrumb trail={[[\"ExpressoDB\", \"/auth/database\"], [collectionID]]} />\n      <div className=\"card-max\">\n        <div className=\"db-header\">\n          <div className=\"db-title\">\n            <h3 className=\"mb-0\">{collectionID}</h3>\n            <i className=\"fas fa-sync\" onClick={refresh} />\n          </div>\n          {renderPageNav()}\n        </div>\n        {renderOptions()}\n        {renderData()}\n        {data && <div className=\"bottom-nav\">{renderPageNav()}</div>}\n      </div>\n    </Container>\n  );\n\n  function renderData() {\n    if (data)\n      return (\n        <>\n          {data.map((doc, index) => (\n            <Document\n              key={index}\n              collectionID={collectionID}\n              data={doc}\n              refresh={softRefresh}\n            />\n          ))}\n        </>\n      );\n    else\n      return (\n        <div className=\"loader-wrapper\">\n          <Loader type=\"spin\" color=\"#00aaff\" />\n        </div>\n      );\n  }\n\n  function renderOptions() {\n    return (\n      <Row className=\"mb-16\">\n        <Col lg={6}>\n          <div className=\"hspread vcenter\">\n            <div>Query:</div>\n            <input\n              className=\"opt-input\"\n              value={query}\n              onChange={(evt) => setQuery(evt.target.value)}\n            />\n          </div>\n        </Col>\n        <Col lg={6}>\n          <div className=\"hspread vcenter\">\n            <div>Sort:</div>\n            <input\n              className=\"opt-input\"\n              value={sort}\n              onChange={(evt) => setSort(evt.target.value)}\n            />\n          </div>\n        </Col>\n      </Row>\n    );\n  }\n\n  function renderPageNav() {\n    if (pageCount > 1) {\n      return (\n        <div>\n          {page > 1 && (\n            <>\n              <i\n                onClick={() => onSetPage(1)}\n                className=\"nav-icon fas fa-angle-double-left\"\n              />\n              <i\n                onClick={() => onSetPage(page - 1)}\n                className=\"nav-arrow fas fa-angle-left\"\n              ></i>\n            </>\n          )}\n          Page {page + \" of \" + pageCount}\n          {page < pageCount && (\n            <>\n              <i\n                onClick={() => onSetPage(page + 1)}\n                className=\"nav-arrow fas fa-angle-right\"\n              ></i>\n              <i\n                onClick={() => onSetPage(pageCount)}\n                className=\"nav-icon fas fa-angle-double-right\"\n              />\n            </>\n          )}\n        </div>\n      );\n    }\n  }\n\n  // Helpers\n\n  function onSetPage(update) {\n    setData(null);\n    setPage(update);\n  }\n\n  async function refresh() {\n    if (page === 1 && query === \"\" && sort === \"\")\n      getData({ collectionID, page: 1 });\n    else {\n      setPage(1);\n      setQuery(\"\");\n      setSort(\"\");\n    }\n  }\n\n  async function softRefresh() {\n    getData({\n      collectionID,\n      page,\n      query: JSON.parse(queryString),\n      sort: JSON.parse(sortString),\n    });\n  }\n\n  async function getData(payload) {\n    setData(null);\n    const { page } = payload;\n    const { data } = await GetDocuments(payload);\n    const { results, count } = data;\n    setData(results);\n    setPageCount(Math.ceil(count / 10));\n    if (!results[0] && page > 1) setPage(page - 1);\n  }\n}\n\nexport default Collection;\n","import React from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom'\nimport Database from './Database'\nimport Collection from './Collection'\n\nfunction App() {\n\n  // JSX\n\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path='/database' component={ Database } />\n        <Route path='/collection' component={ Collection } />\n        <Redirect from='/' to='/database' />\n      </Switch>\n    </BrowserRouter>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}