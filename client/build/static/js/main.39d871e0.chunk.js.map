{"version":3,"sources":["services.js","Database.js","Document.js","Collection.js","App.js","serviceWorker.js","index.js"],"names":["axios","require","DeleteDocument","payload","a","post","DropCollection","CreateCollection","GetDatabaseInfo","get","GetDocuments","JSON","stringify","GetDocumentCount","GetServerConfig","modalStyle","content","top","left","right","bottom","transform","Modal","setAppElement","Home","props","useState","databaseID","setDatabaseID","data","setData","showCreateModal","setShowCreateModal","showDropModal","setShowDropModal","create","setCreate","drop","setDrop","useEffect","getDatabaseID","getDatabaseInfo","Container","className","onClick","isOpen","style","onSubmit","evt","preventDefault","createCollection","value","onChange","target","type","dropCollection","renderActions","map","obj","index","key","collectionID","history","push","count","size","avgObjSize","renderData","database","res","console","log","status","ObjectToggle","open","setOpen","object","keys","Object","renderPair","active","toString","Document","setActive","onMouseOver","onMouseLeave","deleteDocument","aria-hidden","objectID","_id","refresh","Collection","setCollectionID","page","setPage","pages","setPages","query","setQuery","queryString","setQueryString","sort","setSort","sortString","setSortString","parse","qs","window","location","search","id","getPages","getData","str","substring","length","replace","split","forEach","prop","tup","parseQuery","isNaN","parseInt","parseSort","to","renderAppNav","renderPageNav","Row","Col","lg","doc","reqData","Math","ceil","App","path","component","Database","from","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.39d871e0.chunk.js","sourcesContent":["const axios = require('axios')\n\nexport async function DeleteDocument(payload) {\n  return await axios.post('/api/delete-document', payload)\n}\n\nexport async function DropCollection(payload) {\n  return await axios.post('/api/drop-collection', payload)\n}\n\nexport async function CreateCollection(payload) {\n  return await axios.post('/api/create-collection', payload)\n}\n\nexport async function GetDatabaseInfo() {\n  return await axios.get('/api/get-database-info')\n}\n\nexport async function GetDocuments(payload) {\n  return await axios.get('/api/get-documents/' + JSON.stringify(payload))\n}\n\nexport async function GetDocumentCount(payload) {\n  return await axios.get('/api/get-document-count/' + JSON.stringify(payload))\n}\n\nexport async function GetServerConfig() {\n  return await axios.get('/api/get-server-config')\n}\n","import React, { useState, useEffect } from 'react'\nimport { Container } from 'react-bootstrap'\nimport Modal from 'react-modal'\nimport { GetDatabaseInfo, GetServerConfig, CreateCollection, DropCollection } from './services'\n\nconst modalStyle = {\n  content: {\n    top: '33%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    transform: 'translate(-50%, -50%)'\n  }\n}\n\nModal.setAppElement('#root')\n\nfunction Home(props) {\n\n  const [databaseID, setDatabaseID] = useState('')\n  const [data, setData] = useState(null)\n  const [showCreateModal, setShowCreateModal] = useState(false)\n  const [showDropModal, setShowDropModal] = useState(false)\n  const [create, setCreate] = useState('')\n  const [drop, setDrop] = useState('')\n\n  useEffect(() => {\n    getDatabaseID()\n    getDatabaseInfo()\n  }, [])\n\n  // JSX\n\n  return (\n    <Container>\n    <h3 className='mb-25'>{databaseID}</h3>\n    {renderActions()}\n    {renderData()}\n    </Container>\n  )\n\n  function renderActions() {\n    if (data) return (\n      <div className='mb-15'>\n      {renderCreateCollection()}\n      {renderDropCollection()}\n      </div>\n    )\n  }\n\n  function renderCreateCollection() {\n    return (\n      <span>\n      <button onClick={() => {setCreate(''); setShowCreateModal(true)}}>New Collection</button>\n      <Modal isOpen={showCreateModal} style={modalStyle}>\n        <form onSubmit={evt => {evt.preventDefault(); createCollection()}}>\n          New Collection:<input value={create}\n          onChange={evt => setCreate(evt.target.value)}\n          className='modal-input' type='text' />\n          <button type='submit'>Submit</button>\n          <button onClick={evt => {evt.preventDefault(); setShowCreateModal(false)}}>Cancel</button>\n        </form>\n      </Modal>\n      </span>\n    )\n  }\n\n  function renderDropCollection() {\n    return (\n      <span>\n      <button onClick={() => {setDrop(''); setShowDropModal(true)}}>Drop Collection</button>\n      <Modal isOpen={showDropModal} style={modalStyle}>\n        <form onSubmit={evt => {evt.preventDefault(); dropCollection()}}>\n          Drop Collection:<input value={drop}\n          onChange={evt => setDrop(evt.target.value)}\n          className='modal-input' type='text' />\n          <button type='submit'>Submit</button>\n          <button onClick={evt => {evt.preventDefault(); setShowDropModal(false)}}>Cancel</button>\n        </form>\n      </Modal>\n      </span>\n    )\n  }\n\n  function renderData() {\n    if (data) {\n      return (\n        <table className='db-table'>\n        <thead>\n        <tr>\n        <th>Collection</th>\n        <th>Count</th>\n        <th>Size</th>\n        <th>Average Size</th>\n        </tr>\n        </thead>\n        <tbody>\n        {data.map((obj, index) =>\n          <tr key={index}\n          className='collection'\n          onClick={() => toCollection(obj.collectionID)}>\n          <td>{obj.collectionID}</td>\n          <td>{obj.count}</td>\n          <td>{obj.size}</td>\n          <td>{obj.avgObjSize}</td>\n          </tr>\n        )}\n        </tbody>\n        </table>\n      )\n    }\n  }\n\n  // Helpers\n\n  async function getDatabaseID() {\n    return setDatabaseID((await GetServerConfig()).data.database)\n  }\n\n  async function getDatabaseInfo() {\n    setData(null)\n    return setData((await GetDatabaseInfo()).data)\n  }\n\n  function toCollection(collectionID) {\n    props.history.push('/collection/?id='+collectionID)\n  }\n\n  async function createCollection() {\n    const res = await CreateCollection({collectionID: create})\n    console.log(res.status)\n    if (res.status === 200) {\n      setShowCreateModal(false)\n      getDatabaseInfo()\n    }\n  }\n\n  async function dropCollection() {\n    const res = await DropCollection({collectionID: drop})\n    if (res.status === 200) {\n      setShowDropModal(false)\n      getDatabaseInfo()\n    }\n  }\n\n\n}\n\nexport default Home\n","import React, { useState } from 'react'\nimport { DeleteDocument } from './services'\n\nfunction Document(props) {\n\n  const [active, setActive] = useState(false)\n\n  const obj = props.data\n  const keys = Object.keys(obj)\n\n  return (\n    <div className='document hspread'\n    onMouseOver={() => setActive(true)} onMouseLeave={() => setActive(false)}>\n    <div className='fluid'>{keys.map((key, index) => <span key={index}>{renderPair(key, obj[key], active)}</span>)}</div>\n    {renderToolbar()}\n    </div>\n  )\n\n  function renderToolbar() {\n    return (\n      <div className={'toolbar ' + (active ? '' : 'transparent')}>\n      <i onClick={() => deleteDocument()} className=\"fa fa-times\" aria-hidden=\"true\"></i>\n      </div>\n    )\n  }\n\n  // Helpers\n\n  async function deleteDocument() {\n    const status = (await DeleteDocument({\n      collectionID: props.collectionID,\n      objectID: props.data._id\n    })).status\n    if (status === 200) props.refresh()\n  }\n\n}\n\nfunction ObjectToggle(props) {\n\n  const [open, setOpen] = useState(false)\n\n  const obj = props.object\n  const keys = Object.keys(obj)\n\n  if (open) {\n    return (\n      <span>\n        <span className='toggle' onClick={() => setOpen(false)}>collapse</span>\n        <div className='fluid'><div className='indent'>{keys.map((key, index) => <span key={index}>{renderPair(key, obj[key], props.active)}</span>)}</div></div>\n      </span>\n    )\n  }\n  else return <span onClick={() => setOpen(true)} className='toggle'>...</span>\n\n}\n\nfunction renderPair(key, value, active) {\n  if (value !== Object(value)) {\n    const type = typeof value\n    return (\n      <div className='hspread'>\n        <div>{key}: <span className={type}>{value.toString()}</span></div>\n        {active ? <div className='type'>{type}</div> : ''}\n      </div>\n    )\n  }\n  else return <div>{key}: <ObjectToggle object={value} active={active} /></div>\n}\n\nexport default Document\n","import React, { useState, useEffect } from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport Document from './Document'\nimport qs from 'query-string'\nimport { GetServerConfig, GetDocuments, GetDocumentCount } from './services'\n\nfunction Collection(props) {\n\n  const [databaseID, setDatabaseID] = useState(null)\n  const [collectionID, setCollectionID] = useState(null)\n  const [page, setPage] = useState(1)\n  const [pages, setPages] = useState(null)\n  const [data, setData] = useState(null)\n  const [query, setQuery] = useState('')\n  const [queryString, setQueryString] = useState('{}')\n  const [sort, setSort] = useState('')\n  const [sortString, setSortString] = useState('{}')\n\n  useEffect(() => {\n    getDatabaseID()\n    const parse = qs.parse(window.location.search)\n    setCollectionID(parse.id)\n    if (parse.page) setPage(parse.page)\n  }, [])\n\n  useEffect(() => {\n    if (collectionID) getPages({\n      collectionID: collectionID,\n      query: JSON.parse(queryString),\n    })\n  }, [collectionID, queryString])\n\n  useEffect(() => {\n    if (collectionID) getData({\n      collectionID: collectionID,\n      page: page,\n      query: JSON.parse(queryString),\n      sort: JSON.parse(sortString),\n    })\n  }, [collectionID, page, queryString, sortString])\n\n  useEffect(() => {\n    const str = parseQuery(query)\n    setQueryString(str)\n  }, [query])\n\n  useEffect(() => {\n    const str = parseSort(sort)\n    setSortString(str)\n  }, [sort])\n\n  // JSX\n\n  return (\n    <Container>\n    <h3>{collectionID}</h3>\n    <div className='hspread mb-25'>\n    {renderAppNav()}\n    {renderPageNav()}\n    </div>\n    {renderOptions()}\n    {renderData()}\n    <div className='right'>\n    {renderPageNav(true)}\n    </div>\n    </Container>\n  )\n\n  function renderData() {\n    if (data) {\n      return (\n        <div className='mb-25'>\n        {data.map((doc, index) =>\n          <Document key={index} collectionID={collectionID} data={doc} refresh={refresh} />\n        )}\n        </div>\n      )\n    }\n  }\n\n  function renderOptions() {\n    return (\n      <Row className='mb-15'>\n      <Col lg={6}>\n      <div className='hspread vcenter'>\n      <div>Query:</div>\n      <input className='opt-input' type='text'\n      value={query} onChange={evt => setQuery(evt.target.value)} />\n      </div>\n      </Col>\n      <Col lg={6}>\n      <div className='hspread vcenter'>\n      <div>Sort:</div>\n      <input className='opt-input' type='text'\n      value={sort} onChange={evt => setSort(evt.target.value)} />\n      </div>\n      </Col>\n      </Row>\n    )\n  }\n\n  function renderAppNav() {\n    if (databaseID) {\n      return (\n        <div>\n          <Link to='/database'>{databaseID}</Link>\n          <i className=\"divider fas fa-chevron-right\"></i>\n          <span onClick={() => refresh()} className='synth-link'>{collectionID}</span>\n        </div>\n      )\n    }\n  }\n\n  function renderPageNav(reqData=false) {\n    if (pages > 1 && (!reqData || (reqData && data))) {\n      return (\n        <div>\n        {page > 1 ? <i onClick={() => setPage(page-1)} className=\"nav-arrow fas fa-chevron-left\"></i> : ''}\n        {page + ' of ' + pages}\n        {page < pages ? <i onClick={() => setPage(page+1)} className=\"nav-arrow fas fa-chevron-right\"></i> : ''}\n        </div>\n      )\n    }\n  }\n\n  // Helpers\n\n  async function refresh() {\n    if (page === 1 && query === '' && sort === '') getData({collectionID: collectionID, page: 1})\n    else {\n      setPage(1)\n      setQuery('')\n      setSort('')\n    }\n  }\n\n  async function getDatabaseID() {\n    setDatabaseID((await GetServerConfig()).data.database)\n  }\n\n  async function getData(payload) {\n    setData(null)\n    const data = (await GetDocuments(payload)).data\n    setData(data)\n  }\n\n  async function getPages(payload) {\n    setPages(null)\n    const count = (await GetDocumentCount(payload)).data\n    setPages(Math.ceil(count/10))\n  }\n\n  function parseQuery(str) {\n    if (str[0] === '{') str = str.substring(1, str.length-1)\n    str = str.replace(/ |'|\"/g,'')\n    const props = str.split(',')\n    const obj = {}\n    props.forEach((prop) => {\n        const tup = prop.split(':')\n        if (!tup[1]) return '{}'\n        obj[tup[0]] = tup[1]\n    })\n    return JSON.stringify(obj)\n  }\n\n  function parseSort(str) {\n    if (str[0] === '{') str = str.substring(1, str.length-1)\n    str = str.replace(/ |'|\"/g,'')\n    const props = str.split(',')\n    const obj = {}\n    props.forEach((prop) => {\n        const tup = prop.split(':')\n        if (!tup[1] || isNaN(tup[1])) return '{}'\n        obj[tup[0]] = parseInt(tup[1])\n    })\n    return JSON.stringify(obj)\n  }\n\n}\n\nexport default Collection\n","import React from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom'\nimport Database from './Database'\nimport Collection from './Collection'\n\nfunction App() {\n\n  // JSX\n\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path='/database' component={ Database } />\n        <Route path='/collection' component={ Collection } />\n        <Redirect from='/' to='/database' />\n      </Switch>\n    </BrowserRouter>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}